env:
  RUBY_VERSION: 2.7

name: Rails tests
on: [pull_request]
jobs:
  build:

    runs-on: ubuntu-latest
    container: circleci/ruby:2.7.1-node-browsers-legacy

    env:
      PGHOST: postgres
      PGUSER: administrate
      RAILS_ENV: test

    services:
      postgres:
        image: postgres:10.1-alpine
        env:
          POSTGRES_USER: administrate
          POSTGRES_DB: ruby25
          POSTGRES_PASSWORD: ""
        ports:
        - 5432:5432
        # Add a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    # This Docker file changes sets USER to circleci instead of using the default user, so we need to update file permissions for this image to work on GH Actions.
    # See https://docs.github.com/actions/reference/virtual-environments-for-github-hosted-runners#docker-container-filesystem
    - name: Setup file system permissions
      run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/_temp

    # checkout repo
    - uses: actions/checkout@v2

    # dependencies
    - name: install bundler
      run: gem install bundler
    - name: Install dependencies
      run: bundle install --path vendor/bundle

    # linting
    # - name: rubocop install
    #   run: gem install rubocop
    # - name: rubocop run
    #   run: rubocop

    # tests
    - name: db setup
      run: bundle exec rake db:setup
    - name: tests
      run: bundle exec rspec

    # steps:
    #   name: rubocop
    #   - uses: actions/checkout@v2
    #   - uses: actions/setup-ruby@v1
    #     with:
    #       ruby-version: ${{ env.RUBY_VERSION }}
    #   - name: install rubocop
    #     run: gem install rubocop
    #   - name: run rubocop
    #     run: rubocop

    # name: rspec tests
    # runs-on: ubuntu-18.04
    # steps:
    #   - uses: actions/checkout@v1
    #   - uses: actions/setup-ruby@v1
    #     with:
    #       ruby-version: ${{ env.RUBY_VERSION }}
    #   - name: install bundler and bundle install
    #     run: |
    #       gem install bundler
    #       bundle install
    #   - name: project setup
    #     run: |
    #        yarn install --check-files
    #        bin/rails webpacker:install
    #        bin/rake db:setup
    #   - name: run tests
    #     run: bundle exec rake
    #   - name: Upload coverage results
    #     uses: actions/upload-artifact@master
    #     if: always()
    #     with:
    #       name: coverage-report
    #       path: coverage
